
import java.util.ArrayList;
import java.util.List;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author raquelalvarez
 */
public class AgencyGUI extends javax.swing.JFrame {

    private List<Holiday> holidayList;
    private List<Magician> magicianList;
    private List<Customer> customerList;
    private List<BookingClass> bookingsList;
    private List<BookingClass> magicianAndHoliday;
    private String customerName;
    private String selectedHoliday;
    //private String holidayToDisplay;
    //private String magicianToDisplay;
    //private String customerToDisplay;
    //private List<Magician> freeMagicians;     // initialize in constructor
    private String freeMagicians;
    private HolidayQueries holidayQueries = new HolidayQueries();
    private MagicianQueries magicianQueries = new MagicianQueries();
    private CustomerQueries customerQueries = new CustomerQueries();
    private Booking booking = new Booking();
    private WaitlistQueries waitlistQueries = new WaitlistQueries();
    
    private Holiday holidayToAdd;
    
    private BookingClass customerToCancel;
    private Magician magicianToRescheduleWaitlist;
    
    private Customer customerToCancelWaitlist;
    private List<Customer> customerWaitlist;
    private List<Holiday> holidayWaitlist;
    
    private Magician magicianToAdd;
    
    private Magician magicianToDrop;
    
    
    public AgencyGUI() {
        initComponents();
        
        //freeMagicians = new ArrayList<>();        // modify in submit booking button event handler
        
        holidayToAdd = new Holiday();
        customerToCancel = new BookingClass();
        magicianToRescheduleWaitlist = new Magician();
        magicianAndHoliday = new ArrayList<>();
        magicianAndHoliday = null;
        
        customerToCancelWaitlist = new Customer();
        customerWaitlist = new ArrayList<>();
        holidayWaitlist = new ArrayList<>();
        
        holidayList = HolidayQueries.getAllHolidays();
        for (int i = 0; i < holidayList.size(); i++)
        {
            holidayComboBox.addItem(holidayList.get(i).getName());
        }
        
        for (int i = 0; i < holidayList.size(); i++)
        {
            holidayStatusComboBox.addItem(holidayList.get(i).getName());
        }
        
        magicianList = MagicianQueries.getAllMagicians();
        for (int i = 0; i < magicianList.size(); i++)
        {
            magicianStatusComboBox.addItem(magicianList.get(i).getName());
        }
        
        customerList = CustomerQueries.getAllCustomers();
        for (int i = 0; i < customerList.size(); i++)
        {
            customerStatusComboBox.addItem(customerList.get(i).getName());
        }
        
        bookingsList = Booking.getAllBookings();        // Do I want all customers only?
        for (int i  = 0; i < bookingsList.size(); i++)
        {
            cancelBookingCustomerComboBox.addItem(bookingsList.get(i).getCustomer());
        }
        
        customerWaitlist = WaitlistQueries.getAllWaitlist();
        for (int i = 0; i < customerWaitlist.size(); i++)
        {
            cancelWaitlistCustomerComboBox.addItem(customerWaitlist.get(i).getName());
        }
        
        WaitlistQueries.populateTableWithWaitlist(waitlistTable);
        Booking.populateTableWithBookings(bookingsTable);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jDialog2 = new javax.swing.JDialog();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        frameTabbedPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        customerNameLabel = new javax.swing.JLabel();
        customerNameTextField = new javax.swing.JTextField();
        holidayLabel = new javax.swing.JLabel();
        holidayComboBox = new javax.swing.JComboBox();
        submitBookingButton = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        bookingsTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        waitlistTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        holidayStatusComboBox = new javax.swing.JComboBox();
        magicianStatusComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        magicianStatusTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        customerStatusComboBox = new javax.swing.JComboBox();
        jScrollPane4 = new javax.swing.JScrollPane();
        customerStatusTable = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        holidayStatusTable = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        addMagicianTextBox = new javax.swing.JTextField();
        addMagicianButton = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        dropMagicianComboBox = new javax.swing.JComboBox();
        dropMagicianButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        cancelBookingCustomerComboBox = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cancelBookingHolidayComboBox = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cancelWaitlistCustomerComboBox = new javax.swing.JComboBox();
        cancelWaitlistHolidayComboBox = new javax.swing.JComboBox();
        cancelBookingButton = new javax.swing.JButton();
        cancelWaitlistButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        addHolidayButton = new javax.swing.JButton();
        addHolidayTextBox = new javax.swing.JTextField();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Magician's Agency");

        customerNameLabel.setText("Customer's Name:");

        customerNameTextField.setToolTipText("");
        customerNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerNameTextFieldActionPerformed(evt);
            }
        });

        holidayLabel.setText("Holiday: ");

        holidayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                holidayComboBoxActionPerformed(evt);
            }
        });

        submitBookingButton.setText("Submit Request");
        submitBookingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBookingButtonActionPerformed(evt);
            }
        });

        bookingsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Customer", "Magician", "Holiday"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        bookingsTable.setShowGrid(false);
        bookingsTable.setUpdateSelectionOnSort(false);
        jScrollPane5.setViewportView(bookingsTable);

        jLabel4.setText("List of Booked Clients");

        jLabel5.setText("List of Clients on the Waitlist");

        waitlistTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Customer", "Holiday", "Timestamp"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane6.setViewportView(waitlistTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(161, 161, 161)
                                .addComponent(jLabel4))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(139, 139, 139)
                                .addComponent(jLabel5)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(holidayLabel)
                                    .addComponent(customerNameLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(customerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(holidayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(submitBookingButton)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane6))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(customerNameLabel)
                            .addComponent(customerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(holidayLabel)
                            .addComponent(holidayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(submitBookingButton)))
                .addGap(20, 20, 20)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        frameTabbedPane.addTab("Booking", jPanel1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 121, Short.MAX_VALUE)
        );

        holidayStatusComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                holidayStatusComboBoxActionPerformed(evt);
            }
        });

        magicianStatusComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                magicianStatusComboBoxActionPerformed(evt);
            }
        });

        jLabel1.setText("Select a Holiday:");

        jLabel2.setText("Select a Magician:");

        magicianStatusTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Customer", "Holiday"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(magicianStatusTable);

        jLabel3.setText("Select a Customer:");

        customerStatusComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerStatusComboBoxActionPerformed(evt);
            }
        });

        customerStatusTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Magician", "Holiday"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(customerStatusTable);

        holidayStatusTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Customer", "Magician"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(holidayStatusTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(26, 26, 26)
                                .addComponent(holidayStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(magicianStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(customerStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 584, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(holidayStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(magicianStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(customerStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        frameTabbedPane.addTab("Status", jPanel2);

        jLabel13.setText("To add a Magician type the name on the textbox and press Submit");

        jLabel14.setText("Name of Magician:");

        addMagicianButton.setText("Submit");

        jLabel15.setText("To drop a magician, select it from the drop down menu and press Submit");

        dropMagicianComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));

        dropMagicianButton.setText("Submit");
        dropMagicianButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropMagicianButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(jLabel14)
                        .addGap(26, 26, 26)
                        .addComponent(addMagicianTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(231, 231, 231)
                        .addComponent(addMagicianButton))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jLabel13))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel15))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(190, 190, 190)
                        .addComponent(dropMagicianComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addComponent(dropMagicianButton)))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel13)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(addMagicianTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addMagicianButton)
                .addGap(104, 104, 104)
                .addComponent(jLabel15)
                .addGap(18, 18, 18)
                .addComponent(dropMagicianComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(dropMagicianButton)
                .addContainerGap(189, Short.MAX_VALUE))
        );

        frameTabbedPane.addTab("Add/Drop Magicians", jPanel6);

        cancelBookingCustomerComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBookingCustomerComboBoxActionPerformed(evt);
            }
        });

        jLabel7.setText("Cancel a booked customer for a specific holiday:");

        jLabel8.setText("Select a Customer:");

        jLabel9.setText("Select a Holiday:");

        cancelBookingHolidayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBookingHolidayComboBoxActionPerformed(evt);
            }
        });

        jLabel10.setText("Cancel a waitlisted customer for a specific holiday:");

        jLabel11.setText("Select a Customer:");

        jLabel12.setText("Select a Holiday:");

        cancelWaitlistCustomerComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelWaitlistCustomerComboBoxActionPerformed(evt);
            }
        });

        cancelWaitlistHolidayComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelWaitlistHolidayComboBoxActionPerformed(evt);
            }
        });

        cancelBookingButton.setText("Cancel Customer");
        cancelBookingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBookingButtonActionPerformed(evt);
            }
        });

        cancelWaitlistButton.setText("Cancel Customer");
        cancelWaitlistButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelWaitlistButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cancelWaitlistHolidayComboBox, 0, 181, Short.MAX_VALUE)
                            .addComponent(cancelWaitlistCustomerComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel7)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8))
                                .addGap(45, 45, 45)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(cancelBookingCustomerComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cancelBookingHolidayComboBox, 0, 179, Short.MAX_VALUE))))))
                .addGap(6, 6, 6)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cancelBookingButton)
                    .addComponent(cancelWaitlistButton))
                .addGap(32, 32, 32))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel7)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cancelBookingCustomerComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(cancelBookingHolidayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(cancelBookingButton)))
                .addGap(105, 105, 105)
                .addComponent(jLabel10)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(cancelWaitlistCustomerComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cancelWaitlistHolidayComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(cancelWaitlistButton)))
                .addContainerGap(185, Short.MAX_VALUE))
        );

        frameTabbedPane.addTab("Cancel Customers", jPanel5);

        jLabel6.setText("To add a holiday type the name and click Add");

        addHolidayButton.setText("Add");
        addHolidayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addHolidayButtonActionPerformed(evt);
            }
        });

        addHolidayTextBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addHolidayTextBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(addHolidayTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87)
                        .addComponent(addHolidayButton))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(jLabel6)))
                .addContainerGap(116, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addHolidayButton)
                    .addComponent(addHolidayTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(444, Short.MAX_VALUE))
        );

        frameTabbedPane.addTab("Add Holidays", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(frameTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 610, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(frameTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 574, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void holidayStatusComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_holidayStatusComboBoxActionPerformed
        // TODO add your handling code here:
        Holiday holidayToDisplayInTable = new Holiday(holidayStatusComboBox.getSelectedItem().toString());
        HolidayQueries.populateTableWithHoliday(holidayToDisplayInTable, holidayStatusTable);
    }//GEN-LAST:event_holidayStatusComboBoxActionPerformed

    private void submitBookingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBookingButtonActionPerformed
        // TODO add your handling code here:
        freeMagicians = MagicianQueries.getAllFreeMagicians(selectedHoliday);
        
        customerName = customerNameTextField.getText();
        Customer customer = new Customer(customerName, selectedHoliday);
        
        CustomerQueries.addCustomerToCustomersTable(customerName, selectedHoliday);
        
        if (freeMagicians != null)
        {
            Magician freemag = new Magician ();
            freemag.setName(freeMagicians);
            //choose first free magician and book it
            Booking.addToBookings(customer, freemag);      // freeMagicians.get(0) if we return the list of all free
        }
        else
        {
            //add to waitlist
            CustomerQueries.addToWaitlist(customer);
        }
        
        // Update JTables
        WaitlistQueries.populateTableWithWaitlist(waitlistTable);
        Booking.populateTableWithBookings(bookingsTable);
        
        cancelBookingCustomerComboBox.removeAllItems();
        customerStatusComboBox.removeAllItems();
        customerList = CustomerQueries.getAllCustomers();
        for (int i = 0; i < customerList.size(); i++)
        {
            cancelBookingCustomerComboBox.addItem(customerList.get(i).getName());
            customerStatusComboBox.addItem(customerList.get(i).getName());
        }
        
        holidayStatusComboBox.removeAllItems();
        holidayList = HolidayQueries.getAllHolidays();
        for (int i = 0; i < holidayList.size(); i++)
        {
            holidayStatusComboBox.addItem(holidayList.get(i).getName());
        }
        
        magicianStatusComboBox.removeAllItems();
        magicianList = MagicianQueries.getAllMagicians();
        for (int i = 0; i < magicianList.size(); i++)
        {
            magicianStatusComboBox.addItem(magicianList.get(i).getName());
        }
        
        cancelWaitlistCustomerComboBox.removeAllItems();
        customerWaitlist = WaitlistQueries.getAllWaitlist();
        for (int i = 0; i < customerWaitlist.size(); i++)
        {
            cancelWaitlistCustomerComboBox.addItem(customerWaitlist.get(i).getName());
        }
        
    }//GEN-LAST:event_submitBookingButtonActionPerformed

    private void holidayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_holidayComboBoxActionPerformed
        // TODO add your handling code here:
        selectedHoliday = holidayComboBox.getSelectedItem().toString();
    }//GEN-LAST:event_holidayComboBoxActionPerformed

    private void customerNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerNameTextFieldActionPerformed

    private void magicianStatusComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_magicianStatusComboBoxActionPerformed
        // TODO add your handling code here:
        Magician magicianToDisplayInTable = new Magician(magicianStatusComboBox.getSelectedItem().toString());
        MagicianQueries.populateTableWithMagician(magicianToDisplayInTable, magicianStatusTable);
    }//GEN-LAST:event_magicianStatusComboBoxActionPerformed

    private void customerStatusComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerStatusComboBoxActionPerformed
        // TODO add your handling code here:
        String customerToDisplayInTable = (String) customerStatusComboBox.getSelectedItem();
        CustomerQueries.populateTableWithCustomer(customerToDisplayInTable, customerStatusTable);
    }//GEN-LAST:event_customerStatusComboBoxActionPerformed

    private void addHolidayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addHolidayButtonActionPerformed
        // TODO add your handling code here:
        holidayToAdd.setName(addHolidayTextBox.getText());              // set new holiday's name
        HolidayQueries.addHolidayToHolidayTable(holidayToAdd);          // add holiday to table
        holidayComboBox.addItem(holidayToAdd.getName());                // add holiday to Combo Box of available Holidays
    }//GEN-LAST:event_addHolidayButtonActionPerformed

    private void addHolidayTextBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addHolidayTextBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addHolidayTextBoxActionPerformed

    private void cancelBookingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBookingButtonActionPerformed
        // TODO add your handling code here:
        // cancel customer and liberate magician (check to see if we can reassign it to a waitlisted customer)
        customerToCancel.setHoliday(cancelBookingHolidayComboBox.getSelectedItem().toString());
        magicianToRescheduleWaitlist.setName(magicianAndHoliday.get(cancelBookingHolidayComboBox.getSelectedIndex()).getMagician());
        customerToCancel.setMagician(magicianToRescheduleWaitlist.getName());
        
        Booking.deleteBookingsEntry(customerToCancel);
        List<Customer> availableCustomersFromWaitlist = new ArrayList<>();
        availableCustomersFromWaitlist = WaitlistQueries.getCustomersInWaitlistForAvailableMagician(magicianToRescheduleWaitlist);
        if (!availableCustomersFromWaitlist.isEmpty())
        {
            WaitlistQueries.removeCustomerFromWaitlist(availableCustomersFromWaitlist.get(0));
            Booking.addToBookings(availableCustomersFromWaitlist.get(0), magicianToRescheduleWaitlist);
        }
        
        Booking.populateTableWithBookings(bookingsTable);
        WaitlistQueries.populateTableWithWaitlist(waitlistTable);
        
        // update status and booking combo boxes (including cancelBookingCutomerCB        *************************************************
        //customer
        customerList = CustomerQueries.getAllCustomers();
        customerStatusComboBox.removeAllItems();
        cancelBookingCustomerComboBox.removeAllItems();
        for(int i = 0; i < customerList.size(); i++)
        {
            customerStatusComboBox.addItem(customerList.get(i).getName());
            cancelBookingCustomerComboBox.addItem(customerList.get(i).getName());
        }
        
        holidayList = HolidayQueries.getAllHolidays();
        holidayStatusComboBox.removeAllItems();
        for (int i = 0; i < holidayList.size(); i++)
        {
            holidayStatusComboBox.addItem(holidayList.get(i).getName());
        }
        
        magicianList = MagicianQueries.getAllMagicians();
        magicianStatusComboBox.removeAllItems();
        for (int i = 0; i < magicianList.size(); i++)
        {
            magicianStatusComboBox.addItem(magicianList.get(i).getName());
        }
        
//        cancelWaitlistCustomerComboBox.removeAllItems();
//        customerWaitlist = WaitlistQueries.getAllWaitlist();
//        for (int i = 0; i < customerWaitlist.size(); i++)
//        {
//            cancelWaitlistCustomerComboBox.addItem(customerWaitlist.get(i).getName());
//        }
    }//GEN-LAST:event_cancelBookingButtonActionPerformed

    private void cancelBookingCustomerComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBookingCustomerComboBoxActionPerformed
        // TODO add your handling code here:
        customerToCancel.setCustomer(cancelBookingCustomerComboBox.getSelectedItem().toString());
        //magicianAndHoliday = null;
        magicianAndHoliday = CustomerQueries.getMagicianAndHolidayForSelectedCustomer(customerToCancel.getCustomer());
        
        cancelBookingHolidayComboBox.removeAllItems();
        for (int i = 0; i < magicianAndHoliday.size(); i++)
        {
            cancelBookingHolidayComboBox.addItem(magicianAndHoliday.get(i).getHoliday());
        }
    }//GEN-LAST:event_cancelBookingCustomerComboBoxActionPerformed

    private void cancelBookingHolidayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBookingHolidayComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelBookingHolidayComboBoxActionPerformed

    private void cancelWaitlistCustomerComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelWaitlistCustomerComboBoxActionPerformed
        // TODO add your handling code here:
        // get customer to delete
        customerToCancelWaitlist.setName(cancelWaitlistCustomerComboBox.getSelectedItem().toString());        
        // populate holiday combo box
        holidayWaitlist = WaitlistQueries.getHolidaysForCustomerInWaitlist(customerToCancelWaitlist);
        cancelWaitlistHolidayComboBox.removeAllItems();
        for (int i = 0; i < holidayWaitlist.size(); i++)
        {
            cancelWaitlistHolidayComboBox.addItem(holidayWaitlist.get(i).getName());
        }
        // go to cancel button
    }//GEN-LAST:event_cancelWaitlistCustomerComboBoxActionPerformed

    private void cancelWaitlistHolidayComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelWaitlistHolidayComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelWaitlistHolidayComboBoxActionPerformed

    private void cancelWaitlistButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelWaitlistButtonActionPerformed
        // TODO add your handling code here:
        // remove customer from waitlist
        customerToCancelWaitlist.setHoliday(cancelWaitlistHolidayComboBox.getSelectedItem().toString());
        WaitlistQueries.removeCustomerFromWaitlist(customerToCancelWaitlist);
        // repopulate waitlist table
        WaitlistQueries.populateTableWithWaitlist(waitlistTable);
    }//GEN-LAST:event_cancelWaitlistButtonActionPerformed

    private void dropMagicianButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropMagicianButtonActionPerformed
        // TODO add your handling code here:
        magicianToDrop.setName(dropMagicianComboBox.getSelectedItem().toString());
        // remove from magicians table
        MagicianQueries.removeMagician(magicianToDrop);
        // match dropped customers with free magician if possible
        
        //      if not -> put customers on top of waitlist
        //                remove customers from bookings
        //      if yes -> -
        // update tables
        // update status combo box
        // update cancel bookings customer combo box
        // update cancel waitlist customer combo box
        
    }//GEN-LAST:event_dropMagicianButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgencyGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgencyGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgencyGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgencyGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgencyGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addHolidayButton;
    private javax.swing.JTextField addHolidayTextBox;
    private javax.swing.JButton addMagicianButton;
    private javax.swing.JTextField addMagicianTextBox;
    private javax.swing.JTable bookingsTable;
    private javax.swing.JButton cancelBookingButton;
    private javax.swing.JComboBox cancelBookingCustomerComboBox;
    private javax.swing.JComboBox cancelBookingHolidayComboBox;
    private javax.swing.JButton cancelWaitlistButton;
    private javax.swing.JComboBox cancelWaitlistCustomerComboBox;
    private javax.swing.JComboBox cancelWaitlistHolidayComboBox;
    private javax.swing.JLabel customerNameLabel;
    private javax.swing.JTextField customerNameTextField;
    private javax.swing.JComboBox customerStatusComboBox;
    private javax.swing.JTable customerStatusTable;
    private javax.swing.JButton dropMagicianButton;
    private javax.swing.JComboBox dropMagicianComboBox;
    private javax.swing.JTabbedPane frameTabbedPane;
    private javax.swing.JComboBox holidayComboBox;
    private javax.swing.JLabel holidayLabel;
    private javax.swing.JComboBox holidayStatusComboBox;
    private javax.swing.JTable holidayStatusTable;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable2;
    private javax.swing.JComboBox magicianStatusComboBox;
    private javax.swing.JTable magicianStatusTable;
    private javax.swing.JButton submitBookingButton;
    private javax.swing.JTable waitlistTable;
    // End of variables declaration//GEN-END:variables
}
